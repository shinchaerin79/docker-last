# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# jdk -> application.properties insert -> jar -> scp -> docker compose up
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: add properites
      run: |
        mkdir -p src/main/resources
        echo "${{ secrets.PROPERTIES }}" > src/main/resources/application.properties

    - name: Build with Gradle Wrapper
      run: ./gradlew build -x test

    - name: Transfer Build File using SCP
      uses: appleboy/scp-action@master  # .jar 파일 원격 서버로 복사
      with:
        username: ubuntu
        host: ${{ secrets.SSH_HOST }}
        key: ${{ secrets.SSH_KEY }}
        source: |
          build/libs/*.jar
        target: "/home/ubuntu/docker-last"

    - name: execute
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ubuntu
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd ~/docker-last
          docker compose up -d